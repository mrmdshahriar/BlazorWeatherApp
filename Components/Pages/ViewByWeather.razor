@page "/ViewByWeather"
@using BlazorWeatherApp.Models
@inject HttpClient httpClient
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Components.QuickGrid

<PageTitle>View By Weather</PageTitle>

<h1>View By Weather!</h1>

<style>

    .quickgrid{
    width:100%;
    }

    thead{
    background-color: #c0c0ed;
    height: 40px;
    font-size: 20px;
    }

    tbody tr:nth-child(even) {
    background: rgb(170 217 217 / 40%);
    }

    tbody tr td{
    height: 40px;
    font-size:20px;
    }
    .page-size-chooser {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    }

    .page-size-chooser select {
    margin: 0 1rem;
    padding: 0.25rem 0.5rem;
    }

</style>

<div class="row" style="padding:30px;display:flex;align-items:center;justify-content:left;">
    <div class="col-md-6">
        @* <input @bind-value="weather" class="form-control" type="text" style="width:200px;display:inline-block;" /> *@

        <select class="form-control" @onchange="(x => DropDownChange(x))" style="width:200px;display:inline-block">
            <option disabled>--Select One--</option>
            <option>Rain</option>
            <option>Clear</option>
            <option>Thunderstorm</option>
            <option>Drizzle</option>
            <option>Cloudy</option>
        </select>

        <input type="button" class="btn btn-primary" @onclick="ViewByWeatherReport" value="View By Weather" />
    </div>
</div>

<div class="page-size-chooser">
    Items per page:
    <select @bind="@pagination.ItemsPerPage">
        <option>5</option>
        <option>10</option>
        <option>20</option>
        <option>50</option>
    </select>
</div>

<div class="grid">
    <QuickGrid Items="weatherList" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.city)" Sortable="true" />
        <PropertyColumn Property="@(p => p.temperature)" Sortable="true" />
        <PropertyColumn Property="@(p => p.humidity)" Sortable="true" />
        <PropertyColumn Property="@(p => p.pressure)" Sortable="true" />
        <PropertyColumn Property="@(p => p.weather)" Sortable="true" />
        <PropertyColumn Property="@(p => p.windSpeed)" Sortable="true" />
    </QuickGrid>
</div>
<Paginator State="@pagination" />

@code {
    public string weather = "";

    public string DropDownValue = "";

    IQueryable<WeatherData> weatherList;

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    protected override async Task OnInitializedAsync()
    {
        weatherList = new List<WeatherData>().AsQueryable();

        await base.OnInitializedAsync();
    }

    public void DropDownChange(ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            DropDownValue = args.Value?.ToString();
        }      
    }

    public async Task ViewByWeatherReport()
    {
        try
        {
            var response = await httpClient.GetAsync("https://localhost:44367/api/weather/weather/" + DropDownValue.Trim());

            var list = Helper.ReadResponseMessage<List<WeatherData>>(response);

            weatherList = list.AsQueryable();
        }
        catch(Exception ex)
        {
            Console.WriteLine("Error : " + ex.Message);
        }
    }
}