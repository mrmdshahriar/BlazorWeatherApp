@page "/weather"
@using BlazorWeatherApp.Models
@using Newtonsoft.Json
@attribute [StreamRendering]
@inject HttpClient httpClient

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

@if (data == null)
{
    <p><em>Loading Please Wait...</em></p>
}
else
{
    <table class="table" id="myTable">
        <thead>
            <tr>
                <th>City</th>
                <th>Temperature</th>
                <th>Humidity</th>
                <th>Pressure</th>
                <th>Weather</th>
                <th>WindSpeed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var x in data)
            {
                <tr>
                    <td>@x.city</td>
                    <td>@x.temperature</td>
                    <td>@x.humidity</td>
                    <td>@x.pressure</td>
                    <td>@x.weather</td>
                    <td>@x.windSpeed</td>
                </tr>
            }
        </tbody>
    </table>
    <script>

        let table = new DataTable('#myTable');

    </script>
}

@code {

    IEnumerable<WeatherData> data = null;

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync("https://localhost:44367/api/weather/all");

        data = Helper.ReadResponseMessage<IEnumerable<WeatherData>>(response);
    }
}


